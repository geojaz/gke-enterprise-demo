# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_push", "container_image")

go_binary(
    name = "pyrios-ui",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
    goarch = "amd64",
    goos = "linux",
    race = "on",
)

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/GoogleCloudPlatform/gke-enterprise-demo/app_repos/pyrios-ui",
    visibility = ["//visibility:private"],
    deps = [
        "@com_github_tidwall_gjson//:go_default_library",
        "@com_google_cloud_go//compute/metadata:go_default_library",
        "@com_google_cloud_go//monitoring/apiv3:go_default_library",
        "@go_googleapis//google/api:metric_go_proto",
        "@go_googleapis//google/api:monitoredres_go_proto",
        "@go_googleapis//google/monitoring/v3:monitoring_go_proto",
        "@io_bazel_rules_go//proto/wkt:timestamp_go_proto",
        "@io_opencensus_go//trace:go_default_library",
        "@io_opencensus_go_contrib_exporter_stackdriver//:go_default_library",
    ],
)

go_image(
    name = "go_image_base",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
)

container_image(
    name = "go_image",
    base = ":go_image_base",
    ports = ["9200"],
    files = ["static"],
    directory = "/app",
    workdir = "/app",
    stamp = True,
)

container_push(
    name = "push",
    format = "Docker",
    image = ":go_image",
    registry = "$(REGISTRY)",
    repository = "$(REPOSITORY)",
    tag = "{BUILD_USER}-{BUILD_TIMESTAMP}",
    stamp = True,
)
